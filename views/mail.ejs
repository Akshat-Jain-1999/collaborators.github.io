<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>domain</title>
    <style>
        *,
        *::after,
        *::before {
            box-sizing: border-box;
        }


        body{
            background-color: #423735;
        }
        .outer {
            width: 100vw;
            height: 100vh;
            /* display: grid;
            place-items: center; */
        }

        .text_box {
            width: 50%;
            border: 2px solid #FFC300;
            display: flex;
            flex-direction: column;
            padding: 25px;
            border-radius: 10px;
            margin:100px auto;
        }
        textarea::placeholder{
            color: white;
        }
        textarea {
            /* padding: 10px; */
            color: #FFC300;
            font-size: 15px;
            outline: none;
            border: none;
            background-color: transparent;
            color:#FFC300;
        }

        .file-upload {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            font-size: 15px;
        }

        .file-upload__input {
            display: none;
        }

        .file-upload__button {
            -webkit-appearance: none;
            background: transparent;
            border: 2px solid #FFC300;
            border-radius: 4px;
            outline: none;
            padding: 0.5em 0.8em;
            margin-right: 15px;
            color: #FFC300;
            font-size: 1em;
            font-family: "Quicksand", sans-serif;
            font-weight: bold;
            cursor: pointer;
            transition: 0.5s;
        }
        .file-upload__button:hover{
            color: #423735;
            background: #FFC300;
        }
        /* .file-upload__button:active {
            color: #423735;
            background: #FFC300;
        } */

        .file-upload__label {
            max-width: 500px;
            font-size: 0.95em;
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
            font-family: "Quicksand", sans-serif;
            color: #FFC300;
        }

        @media screen and (max-width: 630px){
			.text_box{
                width:90%;
            }
		}


        .mainbutton {
            width:40%;
            cursor: pointer;
            padding: 10px 15px;
            border: none;
            outline: none;
            background-color: paleturquoise;
            margin: 0px auto;
            margin-bottom:0px;
            font-weight: bolder;
        }

        .modal {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) scale(0);
            transition: 200ms ease-in-out;
            border: 1px solid black;
            border-radius: 10px;
            z-index: 10;
            background-color: white;
            width: 250px;
            max-width: 80%;
        }

        .modal.active {
            transform: translate(-50%, -50%) scale(1);
        }

        .modal-header {
            padding: 10px 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid black;
        }

        .modal-header .title {
            font-size: 1.25rem;
            font-weight: bold;
        }

        .modal-header .close-button {
            cursor: pointer;
            border: none;
            outline: none;
            background: none;
            font-size: 1.25rem;
            font-weight: bold;
        }

        .modal-body {
            padding: 10px 15px;
        }

        #overlay {
            position: fixed;
            opacity: 0;
            transition: 200ms ease-in-out;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, .5);
            pointer-events: none;
        }

        #overlay.active {
            opacity: 1;
            pointer-events: all;
        }

        select {
            cursor: pointer;
            margin-left: 60px;
            border: 1px solid lightgrey;
            padding: 5px 10px;
            outline: none;
            border-radius: 8px;
        }

        .removable {
            background-color: rgb(235, 210, 163);
            width: 40%;
            height: 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin: 10px 27%;
            padding-left: 10px;
        }

        .removable button {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 20px;
            height: 20px;
            cursor: pointer;
            border: none;
            outline: none;
            background: none;
            background-color: rgba(255,165,0,0.3);
            padding: 5px;
            border-radius: 50%;
            margin-right: 10px;
        }
        .removable button:hover{
            background-color:rgba(255,165,0,1);
        }
    </style>
</head>

<body>
    <h4>hello <%= username %> </h4>
    
    <div class="modal" id="modal">
        <div class="modal-header">
            <div class="title">Choose a domain</div>
            <button data-close-button class="close-button">&times;</button>
        </div>
        <div class="modal-body">
            <select id="list" name="list" onchange="getSelectValue();">
                <option value="JavaScript" name="JavaScript">JavaScript</option>
                <option value="Python" name="Python">Python</option>
                <option value="HTML" name="HTML">HTML</option>
                <option value="CSS" name="CSS">CSS</option>
                <option value="C++" name="C">C++</option>
            </select>
        </div>
    </div>
    
    
    <div id="overlay"></div>
    
    <div class="outer">
        <div class="text_box">
            <h3>Need collaborators of domain :</h3>
            <button class="mainbutton" data-modal-target="#modal">Edit Domain</button>
            
            <ul id="myDomain"></ul>
        </div>
    <form onsubmit="func()" method="POST">
        <div class="text_box">
            <textarea name="" id="" cols="30" rows="5" placeholder="Write something..."></textarea><br>
            <div class="file-upload">
                <input class="file-upload__input" type="file" name="myFile[]" id="myFile" multiple>
                <button class="file-upload__button" type="button">Choose File(s)</button>
                <span class="file-upload__label"></span>
            </div>
        </div>
        
        <button type="submit">MAIL IT</button>
        
    </div>
    </form>
    
    <button onclick="sendJSON();">Send JSON</button>

<script>
    const openModalButtons = document.querySelectorAll('[data-modal-target]')
    const closeModalButtons = document.querySelectorAll('[data-close-button]')
    const overlay = document.getElementById('overlay')

    openModalButtons.forEach(button => {
        button.addEventListener('click', () => {
            const modal = document.querySelector(button.dataset.modalTarget)
            openModal(modal)
        })
    })

    overlay.addEventListener('click', () => {
        const modals = document.querySelectorAll('.modal.active')
        modals.forEach(modal => {
            closeModal(modal)
        })
    })

    closeModalButtons.forEach(button => {
        button.addEventListener('click', () => {
            const modal = button.closest('.modal')
            closeModal(modal)
        })
    })

    function openModal(modal) {
        if (modal == null) return
        modal.classList.add('active')
        overlay.classList.add('active')
    }

    function closeModal(modal) {
        if (modal == null) return
        modal.classList.remove('active')
        overlay.classList.remove('active')
    }
    var itemList;
    var finalList=[];
    function getSelectValue() {
        var val = document.getElementById('list');
        var items = document.getElementById("myDomain");
         itemList = items.getElementsByTagName("li");
        var selectValue = val.value;
        console.log(itemList);
        var flag = 1;
        for (var i = 0; i < itemList.length; i++) {
            var text = itemList[i].innerHTML;
            var len = itemList[i].innerHTML.length;
            var finalText = text.substring(0, len - 33);
            if (finalText == selectValue) {
                flag = 0;
                break;
            }
        }
        if (flag == 1) {
            var node = document.createElement("LI");
            var textnode = document.createTextNode(selectValue);
            finalList.push(selectValue);
            var button = document.createElement("button");
            button.classList.add('closex');
            button.innerHTML = "x";
            node.appendChild(textnode);
            node.appendChild(button);
            node.classList.add('removable');
            items.appendChild(node);
            button.addEventListener("click", function () {
                var l=button.parentElement.innerHTML.length;
                var val=button.parentElement.innerHTML.substring(0,l-33);
                var index = finalList.indexOf(val);
                if (index > -1) {
                    finalList.splice(index, 1);
                }
                items.removeChild(button.parentElement);
            });
        }
        else
            alert(finalText + " is Already Added");
    }

    



        function sendJSON(){ 

            var myJSON = JSON.stringify(Object.assign({},finalList));
                console.log(myJSON);
               // Creating a XHR object 
               let xhr = new XMLHttpRequest(); 
               let url = "http://localhost:3000/dashboard/mail"; //jahan catch krna h
           
               // open a connection 
               xhr.open("POST", url, true); 
     
               // Set the request header i.e. which type of content you are sending 
               xhr.setRequestHeader("Content-Type", "application/json"); 
     
     
               // Sending data with the request 
               xhr.send(myJSON); 
           } 

           
    

    function func()
    {
        // fetch("localhost:3000/dashboard/mail", { 
        
        // // Adding method type 
        // method: "POST", 
            
        // // Adding body or contents to send 
        // body: JSON.stringify({ 
        //     title: "foo", 
        //     body: finalList, 
        //     userId: 1 
        // }), 
            
        // Adding headers to the request 
        // headers: { 
        //     "Content-type": "application/json; charset=UTF-8"
        // } 

        

        // let nodesArray = [1,2,3];
        // let body = JSON.stringify({net:nodesArray});
        // fetch("localhost:3000/dashboard/mail",
        // {
        //     method:"POST", 
        //     body:body,
        //     headers: {
        //     'Content-Type': 'application/json'
        //     }}) .then(response => response.json())
        // .then(data => console.log(data));
    } 
        
    


    // Converting to JSON 
    
    //console.log(itemList);
    Array.prototype.forEach.call(
            document.querySelectorAll(".file-upload__button"),
            function (button) {
                const hiddenInput = button.parentElement.querySelector(
                    ".file-upload__input"
                );
                const label = button.parentElement.querySelector(".file-upload__label");
                const defaultLabelText = "No file(s) selected";

                // Set default text for label
                label.textContent = defaultLabelText;
                label.title = defaultLabelText;

                button.addEventListener("click", function () {
                    hiddenInput.click();
                });

                hiddenInput.addEventListener("change", function () {
                    const filenameList = Array.prototype.map.call(hiddenInput.files, function (
                        file
                    ) {
                        return file.name;
                    });

                    label.textContent = filenameList.join(", ") || defaultLabelText;
                    label.title = label.textContent;
                });
            }
        );
</script>
</body>
</html>